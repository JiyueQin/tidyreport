devtools::document()
na_to_unknown(tibble(x = rep(1:5,3)))
devtools::document()
na_to_unknown(tibble(x = rep(1:5,3)))
na_to_unknown(tibble(x = rep(1:5,3)))
na_to_unknown(tibble(x = rep(1:5,3)))
devtools::load_all()
na_to_unknown(tibble(x = rep(1:5,3)))
na_to_unknown(tibble(x = rep(1:5,3)))
devtools::load_all()
na_to_unknown(tibble(x = rep(1:5,3)))
devtools::load_all()
na_to_unknown(tibble(x = rep(1:5,3)))
devtools::load_all(".")
?na_to_unknown
?na_to_unknown
devtools::document()
?na_to_unknown
library(yueyue)
na_to_unknown(tibble(x = rep(1:5,3)))
library(yueyue)
na_to_unknown(tibble(x = rep(1:5,3)))
?yueyue
library(yueyue)
?yueyue
help(yueyue)
devtools::document()
na_to_unknown(tibble(x = rep(1:5,3)))
devtools::install()
na_to_unknown(tibble(x = rep(1:5,3)))
?na_to_unknown()
na_to_unknown(tibble(x = rep(1:5,3)))
devtools::load_all()
na_to_unknown(tibble(x = rep(1:5,3)))
?mutate_if
devtools::document()
na_to_unknown(tibble(x = rep(1:5,3)))
na_to_unknown(tibble(x = rep(1:5,3)))
devtools::load_all()
na_to_unknown(tibble(x = rep(1:5,3)))
? %>%
devtools::load_all()
na_to_unknown(tibble(x = rep(1:5,3)))
?na_to_unknown
devtools::document()
devtools::load_all()
na_to_unknown(xx)
devtools::install()
cox_summary(ss)
na_to_unknown(dd)
yueyue::na_to_unknown(dd)
?add_column
?kable
?kable_styling
devtools::document()
devtools::load_all()
devtools::install()
devtools::document()
devtools::install()
devtools::load_all()
devtools::install()
devtools::load_all()
devtools::install()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
dat = tibble(main = rnorm(50),
age = sample(c(60:100, rep(NA, 10)), 50, replace = T),
gender = rep(c('F', 'M', NA), len = 50),
group = rep(1:4, len = 50),
score = runif(50,0, 100),
race = rep(factor(c('black', 'white', 'other')), 50, len = 50)) %>%
mutate(group = as.character(group))
get_desc_stat(dat = )
get_desc_stat(dat)
?str_sub
devtools::document()
devtools::load_all()
get_desc_stat(dat)
substring
?substring
substring('ddd',1,1)
substring('ddd',2)
substring('ddd',1,5)
########################################################################################
#     Function get_numeric_desc - get descriptive stat for one numeric variable,
#                                 NA will be removed to calculate the statistics
#
######################################################################################
get_numeric_desc = function(df, col){
if (anyNA(df %>% pull(col))) {message(paste('NA in', col, 'was removed'))}
tibble(mean = mean(df %>% pull(col), na.rm = T),
sd = sd(df %>% pull(col), na.rm = T),
variable = paste0(toupper_first(col), ', Mean(SD)')) %>%
mutate_if(is.double, ~round(.,1)) %>%
mutate(stat = paste0(mean, '(', sd, ')')) %>%
select(variable, stat) %>%
mutate_if(is.numeric, as.character)
}
get_desc_stat(na_to_unknown(dat), raw_name = T)
#############################################################################################
#     Function toupper_first - capitalize the first letter of a string or a string vec
#############################################################################################
toupper_first = function(string){
paste0(toupper(substring(string, 1,1)), substring(string, 2))
}
########################################################################################
#     Function get_numeric_desc - get descriptive stat for one numeric variable,
#                                 NA will be removed to calculate the statistics
#
######################################################################################
get_numeric_desc = function(df, col){
if (anyNA(df %>% pull(col))) {message(paste('NA in', col, 'was removed'))}
tibble(mean = mean(df %>% pull(col), na.rm = T),
sd = sd(df %>% pull(col), na.rm = T),
variable = paste0(toupper_first(col), ', Mean(SD)')) %>%
mutate_if(is.double, ~round(.,1)) %>%
mutate(stat = paste0(mean, '(', sd, ')')) %>%
select(variable, stat) %>%
mutate_if(is.numeric, as.character)
}
get_desc_stat = function(dat, raw = F, raw_name = F){
numeric = dat %>% select_if(is.numeric)
numeric_output = map_df(colnames(numeric), ~get_numeric_desc(numeric, .x))
character = dat %>% mutate_if(is.factor, as.character) %>% select_if(is.character)
if(raw){
character_output = map_df(colnames(character), ~get_char_desc(character, .x, raw = T))
}else{
character_output = map_df(colnames(character), ~get_char_desc(character, .x))
}
desc_output = bind_rows(numeric_output, character_output)
if(!raw_name) {
new_name = paste0('Sample(n=', nrow(dat), ')')
desc_output = desc_output %>% rename(!!new_name := stat)
}
if(raw) desc_output else desc_output %>% kable() %>% kable_styling(full_width = F, position = "left")
}
get_desc_stat(na_to_unknown(dat), raw_name = T)
devtools::document()
get_desc_stat(na_to_unknown(dat), raw_name = T)
devtools::load_all()
get_desc_stat(na_to_unknown(dat), raw_name = T)
?map_df
devtools::load_all()
get_desc_stat(na_to_unknown(dat), raw_name = T)
devtools::document()
get_desc_stat(na_to_unknown(dat), raw_name = T)
devtools::document()
get_desc_stat(na_to_unknown(dat), raw_name = T)
?get_desc_stat
devtools::load_all()
get_desc_stat(na_to_unknown(dat), raw_name = T)
?na_if
rm(get_desc_stat())
rm(get_desc_stat)
rm(toupper_first)
rm(get_numeric_desc)
devtools::load_all()
get_desc_stat(na_to_unknown(dat), raw_name = T)
?gther
?gather
??gather
devtools::document()
devtools::load_all()
get_desc_stat(na_to_unknown(dat), raw_name = T)
get_desc_stat_grouping(na_to_unknown(dat), 'gender')
devtools::load_all()
get_desc_stat_grouping(na_to_unknown(dat), 'gender')
?unite
devtools::load_all()
get_desc_stat_grouping(na_to_unknown(dat), 'gender')
get_desc_stat(na_to_unknown(dat), raw_name = T)
get_desc_stat_grouping(na_to_unknown(dat), 'gender')
devtools::load_all()
get_desc_stat_grouping(na_to_unknown(dat), 'gender')
devtools::install()
devtools::document()
devtools::load_all()
dat2 = tibble(temp = rnorm(50),
point = sample(c(60:100, rep(NA, 10)), 50, replace = T),
sex = rep(c('F', 'M', NA), len = 50),
trt = rep(1:4, len = 50),
weight = runif(50,0, 100)) %>%
mutate(trt = as.character(trt))
get_two_group_compare(dat2, 'sex')
kable
?kable
?bind_rows
devtools::document()
get_two_group_compare(dat2, 'sex')
devtools::install()
devtools::document()
devtools::load_all()
devtools::install()
devtools::document()
devtools::install()
?ggploy
?ggplot
??ggplot
devtools::document()
devtoll
devtools::install()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
install.packages('cobalt')
install.packages('backports')
install.packages('cobalt')
devtools::document()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document(\)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
?yueyue
devtools::document()
devtools::install()
?yueyue::cox_summary
?eas::uds_z
?yueyue::get_desc_stat_grouping
devtools::document()
devtools::install()
sessionInfo()
sessionInfo()
devtools::document()
sessionInfo()
devtools::install()
install.packages('withr')
install.packages("withr")
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
